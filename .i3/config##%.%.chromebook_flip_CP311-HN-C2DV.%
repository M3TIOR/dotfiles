## This file has been auto-generated by i3-config-wizard(1).
## It will not be overwritten, so edit it as you like.
##
## Should you change your keyboard layout somewhen, delete
## this file and re-run i3-config-wizard(1).
##

## i3 config file (v4)
##
## Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod1

## Font for window titles. Will also be used by the bar unless a different font
## is used in the bar {} block below. ISO 10646 = Unicode
#font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
## The font above is very space-efficient, that is, it looks good, sharp and
## clear in small sizes. However, if you need a lot of unicode glyphs or
## right-to-left text rendering, you should instead use pango for rendering and
## chose a FreeType font, such as:
#font pango:DejaVu Sans Mono 9
#font pango:Monospace 9
font pango:Monospace, FontAwesome 10

## Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

## start a terminal
bindsym $mod+Return exec i3-sensible-terminal

## kill focused window
bindsym $mod+Shift+q kill

## There also is the (new) i3-dmenu-desktop which only displays applications
## shipping a .desktop file. It is a wrapper around dmenu, so you need that
## installed.
#bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

## change focus
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

## move focused window
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

## split in horizontal orientation
bindsym $mod+h split h

## split in vertical orientation
bindsym $mod+v split v

## enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

## change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

## toggle tiling / floating
bindsym $mod+Shift+space floating toggle

## change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

## focus the parent container
bindsym $mod+p focus parent

## focus the child container
bindsym $mod+c focus child

## reload the configuration file
bindsym $mod+Shift+c reload

## restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

## switch to workspace
bindsym $mod+1 workspace code
bindsym $mod+2 workspace browser
bindsym $mod+3 workspace graphic-design
bindsym $mod+4 workspace backup
bindsym $mod+5 workspace messaging

## move focused container to workspace
bindsym $mod+Shift+1 move container to workspace code
bindsym $mod+Shift+2 move container to workspace browser
bindsym $mod+Shift+3 move container to workspace graphic-design
bindsym $mod+Shift+4 move container to workspace backup
bindsym $mod+Shift+5 move container to workspace messaging
#-----------------------------------------------------------------------------------------------------
#                                          CONF KEYBINDINGS
#-----------------------------------------==================------------------------------------------



## start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run

## adjust xfce4 terminal transpacency
#bindsym Ctrl+F6 exec ~/.bin/setterminaltransparency.sh down
#bindsym Ctrl+F7 exec ~/.bin/setterminaltransparency.sh up

## Change screen orientation
# flimsy for now but will improve later
bindsym $mod+Ctrl+Down exec ~/.bin/rotate-screen.sh Down
bindsym $mod+Ctrl+Up exec ~/.bin/rotate-screen.sh Up
bindsym $mod+Ctrl+Right exec ~/.bin/rotate-screen.sh Right
bindsym $mod+Ctrl+Left exec ~/.bin/rotate-screen.sh Left

# power button
bindsym XF86PowerOff exec ~/.bin/logout.py

# lock button
#   (slock must need to grab keybindings because it's a lock application)
#   
bindsym --release XF86Tools exec --no-startup-id slock

# program search / executor
#
#   (dmenu needs keypresses for command lookup.)
bindsym --release Menu exec dmenu_run


# NOTE:
#   For those using xfce4-settingd and or xfce4-voluemd,
#   be aware that xfce4 will block i3-wm from symbinding the special keys;
#   so you'll have to use xmodmap and output the symbinding using xdotool.
#bindsym XF86MonBrightnessDown exec xfpm-pseudo-brightness.sh down
#bindsym XF86MonBrightnessUp exec xfpm-pseudo-brightness.sh up
#bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
#bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
#bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle

# USER DEINED:
#   (desending key order)
#   (needs --release to work properly because we're using xdotool to send keysyms to xfce4)
bindcode 76 exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5%
bindcode 75 exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5%
bindcode 74 exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
# Use pactl directly, the audio daemon will output the correct notifications anyway.
# for some reason sending the keysims artificially doesn't work reliably even with --release.
#bindcode --release 76 exec --no-startup-id xdotool key XF86AudioRaiseVolume
#bindcode --release 75 exec --no-startup-id xdotool key XF86AudioLowerVolume
#bindcode --release 74 exec --no-startup-id xdotool key XF86AudioMute
bindcode --release 73 exec --no-startup-id xdotool key XF86MonBrightnessUp
bindcode --release 72 exec --no-startup-id xdotool key XF86MonBrightnessDown

# Get side/alt volume buttons to work:
bindcode 123 exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5%
bindcode 122 exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5%
# ALT: XF86Launch 1&2 keycode 122&123

#-----------------------------------------------------------------------------------------------------
#                                                MODES
#-----------------------------------------------=======-----------------------------------------------

mode "artist" {
	# Set the volume keys on the side to do special things when using laptop as a graphics tablet.
	# In particular, make the volume down act as a right click.
	# NATIVE: 115
	bindcode --release 123 exec --no-startup-id xdotool click 2
	bindcode --release 122 exec --no-startup-id xdotool click 3

	## back to normal: Enter or Escape
	bindsym Return mode "default"; exec --no-startup-id xinput --enable 10
	bindsym Escape mode "default"; exec --no-startup-id xinput --enable 10
}

# when entering artist mode, turn off the mouse input.
bindsym $mod+Ctrl+a mode "artist"; exec --no-startup-id xinput --disable 10

## resize window (you can also use the mouse for that)
mode "resize" {
        ## These bindings trigger as soon as you enter the resize mode
        bindsym $mod+h resize shrink width 5 px or 5 ppt
        bindsym $mod+j resize grow height 5 px or 5 ppt
        bindsym $mod+k resize shrink height 5 px or 5 ppt
        bindsym $mod+l resize grow width 5 px or 5 ppt

        ## same bindings, but for the arrow keys
        bindsym Left resize shrink width 5 px or 5 ppt
        bindsym Down resize grow height 5 px or 5 ppt
        bindsym Up resize shrink height 5 px or 5 ppt
        bindsym Right resize grow width 5 px or 5 ppt

        ## back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"




#----------------------------------------------------------------------------------------
#                                  Status Bar
#---------------------------------============-------------------------------------------
## Start i3bar to display a workspace bar (plus the system information i3status
## finds out, if available)
bar {
        status_command ~/.i3/conky-i3bar
        #status_command i3status -c ~/.i3/i3status.conf
        #position top
}

## colourclass               border    bckgrnd    text
client.focused             #1793D0   #1793D0    #FFFFFF
client.focused_inactive    #000000   #333333    #FFFFFF
client.unfocused           #000000   #333333    #FFFFFF
client.urgent              #FF0000   #FF0000    #FF0000

## keyboard
#exec --no-startup-id xset r rate 300 35
#exec --no-startup-id setxkbmap -layout us,ru -option 'grp:alt_shift_toggle' -model chromebook

#---------------------------------------------------------------------------------------------
#                                      Windows settings
#-------------------------------------==================--------------------------------------
## To find out window craterion (class, title, ...) use xprop 
new_window pixel 2
for_window [class="^Psi-plus$"] floating enable, move container to workspace 2
for_window [title="^TerminalHtop$"] floating enable
for_window [class="^ThunarHome$"] floating enable
for_window [title="^File Operation Progress$"] floating enable
for_window [title="^Current Media Information$"] floating enable
for_window [class="^Xfrun4$"] floating enable
for_window [class="^Xfce4-appfinder$"] floating enable
no_focus   [class="^Xfce4-notifyd$" ]
for_window [class="^cameraclient$"] floating enable
for_window [class="^Blueman-manager$"] floating enable
#for_window [class="^galculator$"] floating enable
for_window [class="^ffplay$"] floating enable
for_window [class="^mpv$"] floating enable
for_window [class="^Yad$"] floating enable border normal
for_window [class="^gnuplot$"] floating enable
for_window [class="^xpad$"] floating enable
for_window [class="^Rsvg-view-3$"] floating enable
for_window [class="^Volumeicon$"] floating enable
for_window [class="^Pavucontrol$"] floating enable
for_window [class="^Nm-connection-editor"] floating enable
for_window [class="^qjackctl$"] floating enable
#for_window [class="(?i)hiro" title="(?i)^higan.*"] floating enable

#--------------------------------------------------------------------------------------------
#                                      Startup Applications
#-------------------------------------======================---------------------------------
# Override keyboard mapping at startup to something more usable
#exec --no-startup-id setxkbmap -layout us -option 'grp:alt-shift-toggle' -model chromebook
#exec --no-startup-id xmodmap ~/.Xmodmap &

## compton is started by a pm script because it should
## not be running on a battery (sh is used for conditional execution.)
exec --no-startup-id sh -c "~/bin/isonbattery.sh || compton"
exec --no-startup-id sh -c "xfsettingsd --sm-client-disable || mate-settings-daemon"


#exec --no-startup-id xfce4-volumed
exec --no-startup-id sh -c "xfce4-power-manager || mate-power-manager "
exec --no-startup-id nm-applet
exec --no-startup-id blueman-applet
exec --no-startup-id ~/.bin/nticon.py
exec --no-startup-id sh -c "/usr/lib/policykit-1-gnome/polkit-gnome-authentication-agent-1 || /usr/lib/x86_64-linux-gnu/polkit-mate/polkit-mate-authentication-agent-1"

# Set desktop background
exec --no-startup-id ~/.fehbg

# Enable laptop's tablet's writing pen.
#doesn't always work, sometimes the pen doesn't register (TODO: needs script)
#exec --no-startup-id xinput --enable 13

# Enable lockscreen on device close via acpi
exec-once --no-startup-id sh -c "~/.bin/fliplock.py > ~/fliplock.log"
